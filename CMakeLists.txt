cmake_minimum_required(VERSION 3.17)
project(CppLibraries)

set(CMAKE_CXX_STANDARD 20)
#add_executable(hello_world_1 scripts/hello_world_1.cpp)
#add_executable(CppLibraries main.cpp lib/tmf.h)
#add_executable(README README.md)
#add_executable(main main.cpp)
#add_executable(tmf lib/tmf.h)
#add_executable(code lib/code.cpp)
#add_executable(.gitignore)
#add_executable(LICENSE LICENSE)
#add_executable(LICENSE LICENSE)
#add_executable(CMakeLists CMakeLists.txt)
#add_executable(Снимок экрана от 2021-03-10 23-39-43 "Снимок экрана от 2021-03-10 23-39-43.png")

#add_executable(CMakeLists CMakeLists.txt)
#add_executable(CMakeLists CMakeLists.txt)
#add_executable(CMakeCache cmake-build-debug/CMakeCache.txt)
add_executable(main main.cpp)
#add_executable(def lib/def.h)
#add_executable(hello_world_1 scripts/hello_world_1.cpp)
#add_executable(CppLibraries )
#add_executable(data.cpp data.cpp.txt)
#add_executable(CMakeLists CMakeLists.txt)
#add_executable(tmf lib/tmf.h)
#add_executable(def lib/def.h)
#add_executable(for lib/for.h)
#add_executable( lib/.gitignore)
#add_executable(CMakeLists CMakeLists.txt)
#add_executable(CMakeLists CMakeLists.txt)
#add_executable(CMakeLists CMakeLists.txt)
#add_executable(for lib/for.h)
#add_executable(def lib/def.h)
#add_executable(tmf lib/tmf.h)
add_executable(CMakeLists CMakeLists.txt)
add_executable(def lib/def.h)
add_executable(tmf lib/tmf.h)
add_executable(for lib/for.h)
add_executable(README README.md)
add_executable(data.cpp data.cpp.txt)
add_executable(syslimits /usr/lib/gcc/x86_64-unknown-linux-gnu/10.2.0/include-fixed/syslimits.h)
add_executable(statx /usr/lib/gcc/x86_64-unknown-linux-gnu/10.2.0/include-fixed/x86_64-linux-gnu/bits/statx.h)
add_executable(limits /usr/lib/gcc/x86_64-unknown-linux-gnu/10.2.0/include-fixed/limits.h)
add_executable(acl /usr/include/sys/acl.h)
add_executable(gnu-versions /usr/include/gnu-versions.h)
add_executable(gnumake /usr/include/gnumake.h)
add_executable(magic /usr/include/magic.h)
add_executable(printf /usr/include/printf.h)
add_executable(lib lib/)
add_executable(советы lib/советы)